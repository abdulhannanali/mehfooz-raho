{
  "version": 3,
  "sources": ["../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/F.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/T.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/__.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isPlaceholder.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_curry1.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_curry2.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/add.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_concat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_arity.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_curryN.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/curryN.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/addIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_curry3.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/adjust.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isArray.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isTransformer.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_dispatchable.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_reduced.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfBase.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xall.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/all.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/max.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_map.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isString.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isArrayLike.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xwrap.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/bind.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_reduce.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xmap.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_has.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isArguments.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/keys.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/map.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isInteger.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/nth.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/paths.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/path.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/prop.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pluck.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reduce.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/allPass.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/always.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/and.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xany.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/any.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/anyPass.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/ap.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_aperture.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xaperture.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/aperture.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/append.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/apply.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/values.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/applySpec.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/applyTo.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/ascend.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/assoc.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/isNil.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/assocPath.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/nAry.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/binary.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isFunction.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/liftN.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lift.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/both.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/curry.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/call.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_makeFlat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_forceReduced.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_flatCat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xchain.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/chain.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/clamp.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_cloneRegExp.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/type.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_clone.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/clone.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/comparator.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/not.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/complement.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_pipe.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_checkForMethod.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/slice.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/tail.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pipe.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reverse.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/compose.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/composeK.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_pipeP.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pipeP.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/composeP.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/head.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_identity.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/identity.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pipeWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/composeWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_arrayFromIterator.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_includesWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_functionName.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_objectIs.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_equals.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/equals.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_indexOf.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_includes.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_quote.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_toISOString.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_complement.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_filter.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isObject.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfilter.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/filter.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reject.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_toString.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/toString.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/concat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/cond.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/constructN.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/construct.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/contains.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/converge.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xreduceBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reduceBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/countBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dec.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/defaultTo.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/descend.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_Set.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/difference.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/differenceWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dissoc.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/remove.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/update.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dissocPath.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/divide.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xdrop.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/drop.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xtake.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/take.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_dropLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xdropLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dropLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_dropLastWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xdropLastWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dropLastWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xdropRepeatsWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/last.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dropRepeatsWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dropRepeats.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xdropWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/dropWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/or.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/either.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/empty.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/takeLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/endsWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/eqBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/eqProps.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/evolve.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfind.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/find.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfindIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/findIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfindLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/findLast.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xfindLastIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/findLastIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/flatten.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/flip.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/forEach.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/forEachObjIndexed.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/fromPairs.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/groupBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/groupWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/gt.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/gte.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/hasPath.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/has.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/hasIn.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/identical.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/ifElse.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/inc.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/includes.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/indexBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/indexOf.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/init.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/innerJoin.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/insert.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/insertAll.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/uniqBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/uniq.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/intersection.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/intersperse.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_objectAssign.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/objOf.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_stepCat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/into.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/invert.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/invertObj.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/invoker.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/is.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/isEmpty.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/join.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/juxt.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/keysIn.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lastIndexOf.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isNumber.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/length.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lens.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lensIndex.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lensPath.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lensProp.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lt.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/lte.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mapAccum.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mapAccumRight.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mapObjIndexed.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/match.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mathMod.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/maxBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/sum.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mean.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/median.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/memoizeWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/merge.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeAll.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeWithKey.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeDeepWithKey.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeDeepLeft.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeDeepRight.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeDeepWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeLeft.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeRight.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/mergeWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/min.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/minBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/modulo.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/move.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/multiply.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/negate.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/none.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/nthArg.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/o.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_of.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/of.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/omit.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/once.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_assertPromise.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/otherwise.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/over.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pair.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_createPartialApplicator.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/partial.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/partialRight.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/partition.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pathEq.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pathOr.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pathSatisfies.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pick.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pickAll.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pickBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/pipeK.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/prepend.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/product.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/useWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/project.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/propEq.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/propIs.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/propOr.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/propSatisfies.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/props.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/range.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reduceRight.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reduceWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/reduced.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/times.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/repeat.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/replace.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/scan.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/sequence.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/set.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/sort.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/sortBy.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/sortWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/split.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/splitAt.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/splitEvery.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/splitWhen.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/startsWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/subtract.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/symmetricDifference.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/symmetricDifferenceWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/takeLastWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xtakeWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/takeWhile.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_xtap.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/tap.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/internal/_isRegExp.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/test.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/andThen.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/toLower.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/toPairs.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/toPairsIn.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/toUpper.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/transduce.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/transpose.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/traverse.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/trim.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/tryCatch.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unapply.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unary.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/uncurryN.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unfold.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/union.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/uniqWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unionWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unless.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/unnest.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/until.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/valuesIn.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/view.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/when.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/where.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/whereEq.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/without.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/xor.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/xprod.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/zip.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/zipObj.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/zipWith.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/thunkify.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/ramda/src/index.js", "../../home/binashah/local-work/vaccination-project/ui/node_modules/@abdulhannanali/vaccination-centres-parser/src/index.ts", "../../home/binashah/local-work/vaccination-project/ui/netlify/functions/cities.ts"],
  "sourceRoot": "/tmp/tmp-49240-16HSHBKd4z5F",
  "sourcesContent": ["/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nmodule.exports = F;", "/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nmodule.exports = T;", "/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {\n  '@@functional/placeholder': true\n};", "function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;", "var _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nmodule.exports = add;", "/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _concat;", "function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;", "var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = addIndex;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nmodule.exports = adjust;", "/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};", "function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\n\nmodule.exports = _isTransformer;", "var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\nmodule.exports = _dispatchable;", "function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\nmodule.exports = _reduced;", "module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nmodule.exports = _xall;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xall =\n/*#__PURE__*/\nrequire(\"./internal/_xall\");\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nmodule.exports = all;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nmodule.exports = max;", "function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _map;", "function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nmodule.exports = _isString;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./_isString\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nmodule.exports = _isArrayLike;", "var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\n\nmodule.exports = _xwrap;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;", "var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./_xwrap\");\n\nvar bind =\n/*#__PURE__*/\nrequire(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nmodule.exports = _xmap;", "function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = _has;", "var _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\"); // cover IE < 9 keys issues\n\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nmodule.exports = keys;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xmap =\n/*#__PURE__*/\nrequire(\"./internal/_xmap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nmodule.exports = map;", "/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nmodule.exports = nth;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nmodule.exports = paths;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar paths =\n/*#__PURE__*/\nrequire(\"./paths\");\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nmodule.exports = path;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nmodule.exports = prop;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nmodule.exports = pluck;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '\u2660\uFE0E');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '\u2663\uFE0E'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '\u2660\uFE0E'}); //=> true\n */\n\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nmodule.exports = allPass;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nmodule.exports = always;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both, R.xor\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nmodule.exports = and;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nmodule.exports = _xany;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xany =\n/*#__PURE__*/\nrequire(\"./internal/_xany\");\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nmodule.exports = any;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '\u2663');\n *      const isSpade = R.propEq('suit', '\u2660');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '\u2663'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '\u2660'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '\u2666'}); //=> false\n */\n\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nmodule.exports = anyPass;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nmodule.exports = ap;", "function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}\n\nmodule.exports = _aperture;", "var _concat =\n/*#__PURE__*/\nrequire(\"./_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nmodule.exports = _xaperture;", "var _aperture =\n/*#__PURE__*/\nrequire(\"./internal/_aperture\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xaperture =\n/*#__PURE__*/\nrequire(\"./internal/_xaperture\");\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nmodule.exports = aperture;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nmodule.exports = append;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nmodule.exports = apply;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nmodule.exports = values;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar apply =\n/*#__PURE__*/\nrequire(\"./apply\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n\nvar values =\n/*#__PURE__*/\nrequire(\"./values\"); // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\n\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nmodule.exports = applySpec;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nmodule.exports = applyTo;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nmodule.exports = ascend;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nmodule.exports = assoc;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nmodule.exports = isNil;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar assoc =\n/*#__PURE__*/\nrequire(\"./assoc\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nmodule.exports = assocPath;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nmodule.exports = nAry;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar nAry =\n/*#__PURE__*/\nrequire(\"./nAry\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nmodule.exports = binary;", "function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}\n\nmodule.exports = _isFunction;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar ap =\n/*#__PURE__*/\nrequire(\"./ap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nmodule.exports = liftN;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar liftN =\n/*#__PURE__*/\nrequire(\"./liftN\");\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nmodule.exports = lift;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar and =\n/*#__PURE__*/\nrequire(\"./and\");\n\nvar lift =\n/*#__PURE__*/\nrequire(\"./lift\");\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nmodule.exports = both;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nmodule.exports = curry;", "var curry =\n/*#__PURE__*/\nrequire(\"./curry\");\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;", "var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = _makeFlat;", "function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\nmodule.exports = _forceReduced;", "var _forceReduced =\n/*#__PURE__*/\nrequire(\"./_forceReduced\");\n\nvar _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./_reduce\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nmodule.exports = _flatCat;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _flatCat =\n/*#__PURE__*/\nrequire(\"./_flatCat\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"../map\");\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nmodule.exports = _xchain;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _makeFlat =\n/*#__PURE__*/\nrequire(\"./internal/_makeFlat\");\n\nvar _xchain =\n/*#__PURE__*/\nrequire(\"./internal/_xchain\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nmodule.exports = chain;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nmodule.exports = clamp;", "function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\n\nmodule.exports = _cloneRegExp;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nmodule.exports = type;", "var _cloneRegExp =\n/*#__PURE__*/\nrequire(\"./_cloneRegExp\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nfunction _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}\n\nmodule.exports = _clone;", "var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nmodule.exports = clone;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nmodule.exports = comparator;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nmodule.exports = not;", "var lift =\n/*#__PURE__*/\nrequire(\"./lift\");\n\nvar not =\n/*#__PURE__*/\nrequire(\"./not\");\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nmodule.exports = complement;", "function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\n\nmodule.exports = _pipe;", "var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;", "var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;", "var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nmodule.exports = tail;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _pipe =\n/*#__PURE__*/\nrequire(\"./internal/_pipe\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\n\nmodule.exports = pipe;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nmodule.exports = reverse;", "var pipe =\n/*#__PURE__*/\nrequire(\"./pipe\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\n\nfunction compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}\n\nmodule.exports = compose;", "var chain =\n/*#__PURE__*/\nrequire(\"./chain\");\n\nvar compose =\n/*#__PURE__*/\nrequire(\"./compose\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\n\n\nfunction composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}\n\nmodule.exports = composeK;", "function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}\n\nmodule.exports = _pipeP;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _pipeP =\n/*#__PURE__*/\nrequire(\"./internal/_pipeP\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The first argument may have any arity; the remaining arguments\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\n\n\nfunction pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}\n\nmodule.exports = pipeP;", "var pipeP =\n/*#__PURE__*/\nrequire(\"./pipeP\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The last arguments may have any arity; the remaining\n * arguments must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\n\n\nfunction composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n\n  return pipeP.apply(this, reverse(arguments));\n}\n\nmodule.exports = composeP;", "var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head =\n/*#__PURE__*/\nnth(0);\nmodule.exports = head;", "function _identity(x) {\n  return x;\n}\n\nmodule.exports = _identity;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nmodule.exports = identity;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar head =\n/*#__PURE__*/\nrequire(\"./head\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n\nvar identity =\n/*#__PURE__*/\nrequire(\"./identity\");\n/**\n * Performs left-to-right function composition using transforming function. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nmodule.exports = pipeWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar pipeWith =\n/*#__PURE__*/\nrequire(\"./pipeWith\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Performs right-to-left function composition using transforming function. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried. Transforming function is not used on the\n * last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nmodule.exports = composeWith;", "function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}\n\nmodule.exports = _arrayFromIterator;", "function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}\n\nmodule.exports = _includesWith;", "function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\nmodule.exports = _functionName;", "// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;", "var _arrayFromIterator =\n/*#__PURE__*/\nrequire(\"./_arrayFromIterator\");\n\nvar _includesWith =\n/*#__PURE__*/\nrequire(\"./_includesWith\");\n\nvar _functionName =\n/*#__PURE__*/\nrequire(\"./_functionName\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _objectIs =\n/*#__PURE__*/\nrequire(\"./_objectIs\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;", "var equals =\n/*#__PURE__*/\nrequire(\"../equals\");\n\nfunction _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}\n\nmodule.exports = _indexOf;", "var _indexOf =\n/*#__PURE__*/\nrequire(\"./_indexOf\");\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\n\nmodule.exports = _includes;", "function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n\nmodule.exports = _quote;", "/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;", "function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\n\nmodule.exports = _complement;", "function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _filter;", "function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nmodule.exports = _xfilter;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xfilter =\n/*#__PURE__*/\nrequire(\"./internal/_xfilter\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;", "var _complement =\n/*#__PURE__*/\nrequire(\"./internal/_complement\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar filter =\n/*#__PURE__*/\nrequire(\"./filter\");\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nmodule.exports = reject;", "var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./_map\");\n\nvar _quote =\n/*#__PURE__*/\nrequire(\"./_quote\");\n\nvar _toISOString =\n/*#__PURE__*/\nrequire(\"./_toISOString\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"../reject\");\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\n\nmodule.exports = _toString;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _toString =\n/*#__PURE__*/\nrequire(\"./internal/_toString\");\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nmodule.exports = toString;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nmodule.exports = concat;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0\u00B0C')],\n *        [R.equals(100), R.always('water boils at 100\u00B0C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '\u00B0C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0\u00B0C'\n *      fn(50); //=> 'nothing special happens at 50\u00B0C'\n *      fn(100); //=> 'water boils at 100\u00B0C'\n */\n\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nmodule.exports = cond;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar curry =\n/*#__PURE__*/\nrequire(\"./curry\");\n\nvar nAry =\n/*#__PURE__*/\nrequire(\"./nAry\");\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nmodule.exports = constructN;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar constructN =\n/*#__PURE__*/\nrequire(\"./constructN\");\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nmodule.exports = construct;", "var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nmodule.exports = contains;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nmodule.exports = converge;", "var _curryN =\n/*#__PURE__*/\nrequire(\"./_curryN\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nmodule.exports = _xreduceBy;", "var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xreduceBy =\n/*#__PURE__*/\nrequire(\"./internal/_xreduceBy\");\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nmodule.exports = reduceBy;", "var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nmodule.exports = countBy;", "var add =\n/*#__PURE__*/\nrequire(\"./add\");\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nmodule.exports = dec;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nmodule.exports = defaultTo;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nmodule.exports = descend;", "var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nmodule.exports = _Set;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _Set =\n/*#__PURE__*/\nrequire(\"./internal/_Set\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = difference;", "var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = differenceWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n});\n\nmodule.exports = dissoc;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nmodule.exports = remove;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar adjust =\n/*#__PURE__*/\nrequire(\"./adjust\");\n\nvar always =\n/*#__PURE__*/\nrequire(\"./always\");\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nmodule.exports = update;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar assoc =\n/*#__PURE__*/\nrequire(\"./assoc\");\n\nvar dissoc =\n/*#__PURE__*/\nrequire(\"./dissoc\");\n\nvar remove =\n/*#__PURE__*/\nrequire(\"./remove\");\n\nvar update =\n/*#__PURE__*/\nrequire(\"./update\");\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nmodule.exports = dissocPath;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nmodule.exports = divide;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nmodule.exports = _xdrop;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdrop =\n/*#__PURE__*/\nrequire(\"./internal/_xdrop\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nmodule.exports = drop;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nmodule.exports = _xtake;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtake =\n/*#__PURE__*/\nrequire(\"./internal/_xtake\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nmodule.exports = take;", "var take =\n/*#__PURE__*/\nrequire(\"../take\");\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\n\nmodule.exports = dropLast;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nmodule.exports = _xdropLast;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLast =\n/*#__PURE__*/\nrequire(\"./internal/_dropLast\");\n\nvar _xdropLast =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;", "var slice =\n/*#__PURE__*/\nrequire(\"../slice\");\n\nfunction dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}\n\nmodule.exports = dropLastWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./_reduce\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nmodule.exports = _xdropLastWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLastWhile =\n/*#__PURE__*/\nrequire(\"./internal/_dropLastWhile\");\n\nvar _xdropLastWhile =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLastWhile\");\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nmodule.exports = dropLastWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nmodule.exports = _xdropRepeatsWith;", "var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nmodule.exports = last;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\nrequire(\"./internal/_xdropRepeatsWith\");\n\nvar last =\n/*#__PURE__*/\nrequire(\"./last\");\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nmodule.exports = dropRepeatsWith;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\nrequire(\"./internal/_xdropRepeatsWith\");\n\nvar dropRepeatsWith =\n/*#__PURE__*/\nrequire(\"./dropRepeatsWith\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nmodule.exports = dropRepeats;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nmodule.exports = _xdropWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdropWhile =\n/*#__PURE__*/\nrequire(\"./internal/_xdropWhile\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nmodule.exports = dropWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either, R.xor\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nmodule.exports = or;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar lift =\n/*#__PURE__*/\nrequire(\"./lift\");\n\nvar or =\n/*#__PURE__*/\nrequire(\"./or\");\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nmodule.exports = either;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nmodule.exports = empty;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar drop =\n/*#__PURE__*/\nrequire(\"./drop\");\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nmodule.exports = takeLast;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n\nvar takeLast =\n/*#__PURE__*/\nrequire(\"./takeLast\");\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nmodule.exports = endsWith;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nmodule.exports = eqBy;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nmodule.exports = eqProps;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nmodule.exports = evolve;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nmodule.exports = _xfind;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfind =\n/*#__PURE__*/\nrequire(\"./internal/_xfind\");\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nmodule.exports = find;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nmodule.exports = _xfindIndex;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfindIndex =\n/*#__PURE__*/\nrequire(\"./internal/_xfindIndex\");\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nmodule.exports = findIndex;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nmodule.exports = _xfindLast;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfindLast =\n/*#__PURE__*/\nrequire(\"./internal/_xfindLast\");\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nmodule.exports = findLast;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nmodule.exports = _xfindLastIndex;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfindLastIndex =\n/*#__PURE__*/\nrequire(\"./internal/_xfindLastIndex\");\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nmodule.exports = findLastIndex;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _makeFlat =\n/*#__PURE__*/\nrequire(\"./internal/_makeFlat\");\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nmodule.exports = flatten;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = flip;", "var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nmodule.exports = forEach;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nmodule.exports = forEachObjIndexed;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = fromPairs;", "var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nmodule.exports = groupBy;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) \u2192 Boolean) \u2192 [a] \u2192 [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nmodule.exports = groupWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nmodule.exports = gt;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nmodule.exports = gte;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nmodule.exports = hasPath;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar hasPath =\n/*#__PURE__*/\nrequire(\"./hasPath\");\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nmodule.exports = has;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\nmodule.exports = hasIn;", "var _objectIs =\n/*#__PURE__*/\nrequire(\"./internal/_objectIs\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nmodule.exports = identical;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nmodule.exports = ifElse;", "var add =\n/*#__PURE__*/\nrequire(\"./add\");\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nmodule.exports = inc;", "var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nmodule.exports = includes;", "var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _indexOf =\n/*#__PURE__*/\nrequire(\"./internal/_indexOf\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nmodule.exports = indexOf;", "var slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nmodule.exports = init;", "var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nmodule.exports = innerJoin;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nmodule.exports = insert;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nmodule.exports = insertAll;", "var _Set =\n/*#__PURE__*/\nrequire(\"./internal/_Set\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = uniqBy;", "var identity =\n/*#__PURE__*/\nrequire(\"./identity\");\n\nvar uniqBy =\n/*#__PURE__*/\nrequire(\"./uniqBy\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nmodule.exports = uniq;", "var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n\nvar uniq =\n/*#__PURE__*/\nrequire(\"./uniq\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nmodule.exports = intersection;", "var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nmodule.exports = intersperse;", "var _has =\n/*#__PURE__*/\nrequire(\"./_has\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nmodule.exports = objOf;", "var _objectAssign =\n/*#__PURE__*/\nrequire(\"./_objectAssign\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./_identity\");\n\nvar _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n\nvar objOf =\n/*#__PURE__*/\nrequire(\"../objOf\");\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nfunction _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}\n\nmodule.exports = _stepCat;", "var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./internal/_isTransformer\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _stepCat =\n/*#__PURE__*/\nrequire(\"./internal/_stepCat\");\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nmodule.exports = into;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = invert;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = invertObj;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nmodule.exports = invoker;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\nmodule.exports = is;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar empty =\n/*#__PURE__*/\nrequire(\"./empty\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nmodule.exports = isEmpty;", "var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar converge =\n/*#__PURE__*/\nrequire(\"./converge\");\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nmodule.exports = juxt;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nmodule.exports = keysIn;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nmodule.exports = lastIndexOf;", "function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}\n\nmodule.exports = _isNumber;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _isNumber =\n/*#__PURE__*/\nrequire(\"./internal/_isNumber\");\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nmodule.exports = length;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nmodule.exports = lens;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar lens =\n/*#__PURE__*/\nrequire(\"./lens\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n\nvar update =\n/*#__PURE__*/\nrequire(\"./update\");\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nmodule.exports = lensIndex;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar assocPath =\n/*#__PURE__*/\nrequire(\"./assocPath\");\n\nvar lens =\n/*#__PURE__*/\nrequire(\"./lens\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nmodule.exports = lensPath;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar assoc =\n/*#__PURE__*/\nrequire(\"./assoc\");\n\nvar lens =\n/*#__PURE__*/\nrequire(\"./lens\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nmodule.exports = lensProp;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nmodule.exports = lt;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nmodule.exports = lte;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nmodule.exports = mapAccum;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nmodule.exports = mapAccumRight;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nmodule.exports = mapObjIndexed;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nmodule.exports = match;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nmodule.exports = mathMod;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nmodule.exports = maxBy;", "var add =\n/*#__PURE__*/\nrequire(\"./add\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nmodule.exports = sum;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar sum =\n/*#__PURE__*/\nrequire(\"./sum\");\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nmodule.exports = mean;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar mean =\n/*#__PURE__*/\nrequire(\"./mean\");\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nmodule.exports = median;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nmodule.exports = memoizeWith;", "var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;", "var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nmodule.exports = mergeAll;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = mergeWithKey;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWithKey;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepLeft;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepRight;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWith;", "var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nmodule.exports = mergeLeft;", "var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = mergeRight;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nmodule.exports = mergeWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nmodule.exports = min;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nmodule.exports = minBy;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nmodule.exports = modulo;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nmodule.exports = move;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nmodule.exports = multiply;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nmodule.exports = negate;", "var _complement =\n/*#__PURE__*/\nrequire(\"./internal/_complement\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar all =\n/*#__PURE__*/\nrequire(\"./all\");\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nmodule.exports = none;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nmodule.exports = nthArg;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator \u2218.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nmodule.exports = o;", "function _of(x) {\n  return [x];\n}\n\nmodule.exports = _of;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _of =\n/*#__PURE__*/\nrequire(\"./internal/_of\");\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nmodule.exports = of;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = omit;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nmodule.exports = once;", "var _isFunction =\n/*#__PURE__*/\nrequire(\"./_isFunction\");\n\nvar _toString =\n/*#__PURE__*/\nrequire(\"./_toString\");\n\nfunction _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}\n\nmodule.exports = _assertPromise;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _assertPromise =\n/*#__PURE__*/\nrequire(\"./internal/_assertPromise\");\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\n\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nmodule.exports = otherwise;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\"); // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nmodule.exports = over;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nmodule.exports = pair;", "var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nfunction _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}\n\nmodule.exports = _createPartialApplicator;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _createPartialApplicator =\n/*#__PURE__*/\nrequire(\"./internal/_createPartialApplicator\");\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nmodule.exports = partial;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _createPartialApplicator =\n/*#__PURE__*/\nrequire(\"./internal/_createPartialApplicator\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nmodule.exports = partialRight;", "var filter =\n/*#__PURE__*/\nrequire(\"./filter\");\n\nvar juxt =\n/*#__PURE__*/\nrequire(\"./juxt\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"./reject\");\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nmodule.exports = partition;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nmodule.exports = pathEq;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar defaultTo =\n/*#__PURE__*/\nrequire(\"./defaultTo\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nmodule.exports = pathOr;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nmodule.exports = pathSatisfies;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pickAll;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = pickBy;", "var composeK =\n/*#__PURE__*/\nrequire(\"./composeK\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\n\n\nfunction pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n\n  return composeK.apply(this, reverse(arguments));\n}\n\nmodule.exports = pipeK;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nmodule.exports = prepend;", "var multiply =\n/*#__PURE__*/\nrequire(\"./multiply\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nmodule.exports = product;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nmodule.exports = useWith;", "var _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar identity =\n/*#__PURE__*/\nrequire(\"./identity\");\n\nvar pickAll =\n/*#__PURE__*/\nrequire(\"./pickAll\");\n\nvar useWith =\n/*#__PURE__*/\nrequire(\"./useWith\");\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nmodule.exports = project;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\nmodule.exports = propEq;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar is =\n/*#__PURE__*/\nrequire(\"./is\");\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\nmodule.exports = propIs;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar pathOr =\n/*#__PURE__*/\nrequire(\"./pathOr\");\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\n\nmodule.exports = propOr;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\nmodule.exports = propSatisfies;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nmodule.exports = props;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isNumber =\n/*#__PURE__*/\nrequire(\"./internal/_isNumber\");\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = range;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nmodule.exports = reduceRight;", "var _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./internal/_reduced\");\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nmodule.exports = reduceWhile;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./internal/_reduced\");\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nmodule.exports = reduced;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nmodule.exports = times;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar always =\n/*#__PURE__*/\nrequire(\"./always\");\n\nvar times =\n/*#__PURE__*/\nrequire(\"./times\");\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nmodule.exports = repeat;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nmodule.exports = replace;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = scan;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar ap =\n/*#__PURE__*/\nrequire(\"./ap\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prepend =\n/*#__PURE__*/\nrequire(\"./prepend\");\n\nvar reduceRight =\n/*#__PURE__*/\nrequire(\"./reduceRight\");\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nmodule.exports = sequence;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar always =\n/*#__PURE__*/\nrequire(\"./always\");\n\nvar over =\n/*#__PURE__*/\nrequire(\"./over\");\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nmodule.exports = set;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nmodule.exports = sort;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nmodule.exports = sortBy;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nmodule.exports = sortWith;", "var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nmodule.exports = split;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar length =\n/*#__PURE__*/\nrequire(\"./length\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nmodule.exports = splitAt;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nmodule.exports = splitEvery;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nmodule.exports = splitWhen;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n\nvar take =\n/*#__PURE__*/\nrequire(\"./take\");\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nmodule.exports = startsWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nmodule.exports = subtract;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar concat =\n/*#__PURE__*/\nrequire(\"./concat\");\n\nvar difference =\n/*#__PURE__*/\nrequire(\"./difference\");\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nmodule.exports = symmetricDifference;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar concat =\n/*#__PURE__*/\nrequire(\"./concat\");\n\nvar differenceWith =\n/*#__PURE__*/\nrequire(\"./differenceWith\");\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nmodule.exports = symmetricDifferenceWith;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nmodule.exports = takeLastWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nmodule.exports = _xtakeWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtakeWhile =\n/*#__PURE__*/\nrequire(\"./internal/_xtakeWhile\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nmodule.exports = takeWhile;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nmodule.exports = _xtap;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtap =\n/*#__PURE__*/\nrequire(\"./internal/_xtap\");\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nmodule.exports = tap;", "function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}\n\nmodule.exports = _isRegExp;", "var _cloneRegExp =\n/*#__PURE__*/\nrequire(\"./internal/_cloneRegExp\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isRegExp =\n/*#__PURE__*/\nrequire(\"./internal/_isRegExp\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('\u2018test\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nmodule.exports = test;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _assertPromise =\n/*#__PURE__*/\nrequire(\"./internal/_assertPromise\");\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n */\n\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nmodule.exports = andThen;", "var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nmodule.exports = toLower;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nmodule.exports = toPairs;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nmodule.exports = toPairsIn;", "var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nmodule.exports = toUpper;", "var _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./internal/_xwrap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nmodule.exports = transduce;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = transpose;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar sequence =\n/*#__PURE__*/\nrequire(\"./sequence\");\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\n\nmodule.exports = traverse;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nmodule.exports = trim;", "var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nmodule.exports = tryCatch;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nmodule.exports = unapply;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar nAry =\n/*#__PURE__*/\nrequire(\"./nAry\");\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nmodule.exports = unary;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nmodule.exports = uncurryN;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nmodule.exports = unfold;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar compose =\n/*#__PURE__*/\nrequire(\"./compose\");\n\nvar uniq =\n/*#__PURE__*/\nrequire(\"./uniq\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nmodule.exports = union;", "var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = uniqWith;", "var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar uniqWith =\n/*#__PURE__*/\nrequire(\"./uniqWith\");\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nmodule.exports = unionWith;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nmodule.exports = unless;", "var _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n\nvar chain =\n/*#__PURE__*/\nrequire(\"./chain\");\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nmodule.exports = unnest;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nmodule.exports = until;", "var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nmodule.exports = valuesIn;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\"); // `Const` is a functor that effectively ignores the function given to `map`.\n\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nmodule.exports = view;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('\u2026'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789\u2026'\n */\n\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nmodule.exports = when;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nmodule.exports = where;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar where =\n/*#__PURE__*/\nrequire(\"./where\");\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nmodule.exports = whereEq;", "var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"./reject\");\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nmodule.exports = without;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nmodule.exports = xor;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = xprod;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nmodule.exports = zip;", "var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = zipObj;", "var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nmodule.exports = zipWith;", "var curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nmodule.exports = thunkify;", "module.exports = {};\nmodule.exports.F =\n/*#__PURE__*/\nrequire(\"./F\");\nmodule.exports.T =\n/*#__PURE__*/\nrequire(\"./T\");\nmodule.exports.__ =\n/*#__PURE__*/\nrequire(\"./__\");\nmodule.exports.add =\n/*#__PURE__*/\nrequire(\"./add\");\nmodule.exports.addIndex =\n/*#__PURE__*/\nrequire(\"./addIndex\");\nmodule.exports.adjust =\n/*#__PURE__*/\nrequire(\"./adjust\");\nmodule.exports.all =\n/*#__PURE__*/\nrequire(\"./all\");\nmodule.exports.allPass =\n/*#__PURE__*/\nrequire(\"./allPass\");\nmodule.exports.always =\n/*#__PURE__*/\nrequire(\"./always\");\nmodule.exports.and =\n/*#__PURE__*/\nrequire(\"./and\");\nmodule.exports.any =\n/*#__PURE__*/\nrequire(\"./any\");\nmodule.exports.anyPass =\n/*#__PURE__*/\nrequire(\"./anyPass\");\nmodule.exports.ap =\n/*#__PURE__*/\nrequire(\"./ap\");\nmodule.exports.aperture =\n/*#__PURE__*/\nrequire(\"./aperture\");\nmodule.exports.append =\n/*#__PURE__*/\nrequire(\"./append\");\nmodule.exports.apply =\n/*#__PURE__*/\nrequire(\"./apply\");\nmodule.exports.applySpec =\n/*#__PURE__*/\nrequire(\"./applySpec\");\nmodule.exports.applyTo =\n/*#__PURE__*/\nrequire(\"./applyTo\");\nmodule.exports.ascend =\n/*#__PURE__*/\nrequire(\"./ascend\");\nmodule.exports.assoc =\n/*#__PURE__*/\nrequire(\"./assoc\");\nmodule.exports.assocPath =\n/*#__PURE__*/\nrequire(\"./assocPath\");\nmodule.exports.binary =\n/*#__PURE__*/\nrequire(\"./binary\");\nmodule.exports.bind =\n/*#__PURE__*/\nrequire(\"./bind\");\nmodule.exports.both =\n/*#__PURE__*/\nrequire(\"./both\");\nmodule.exports.call =\n/*#__PURE__*/\nrequire(\"./call\");\nmodule.exports.chain =\n/*#__PURE__*/\nrequire(\"./chain\");\nmodule.exports.clamp =\n/*#__PURE__*/\nrequire(\"./clamp\");\nmodule.exports.clone =\n/*#__PURE__*/\nrequire(\"./clone\");\nmodule.exports.comparator =\n/*#__PURE__*/\nrequire(\"./comparator\");\nmodule.exports.complement =\n/*#__PURE__*/\nrequire(\"./complement\");\nmodule.exports.compose =\n/*#__PURE__*/\nrequire(\"./compose\");\nmodule.exports.composeK =\n/*#__PURE__*/\nrequire(\"./composeK\");\nmodule.exports.composeP =\n/*#__PURE__*/\nrequire(\"./composeP\");\nmodule.exports.composeWith =\n/*#__PURE__*/\nrequire(\"./composeWith\");\nmodule.exports.concat =\n/*#__PURE__*/\nrequire(\"./concat\");\nmodule.exports.cond =\n/*#__PURE__*/\nrequire(\"./cond\");\nmodule.exports.construct =\n/*#__PURE__*/\nrequire(\"./construct\");\nmodule.exports.constructN =\n/*#__PURE__*/\nrequire(\"./constructN\");\nmodule.exports.contains =\n/*#__PURE__*/\nrequire(\"./contains\");\nmodule.exports.converge =\n/*#__PURE__*/\nrequire(\"./converge\");\nmodule.exports.countBy =\n/*#__PURE__*/\nrequire(\"./countBy\");\nmodule.exports.curry =\n/*#__PURE__*/\nrequire(\"./curry\");\nmodule.exports.curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\nmodule.exports.dec =\n/*#__PURE__*/\nrequire(\"./dec\");\nmodule.exports.defaultTo =\n/*#__PURE__*/\nrequire(\"./defaultTo\");\nmodule.exports.descend =\n/*#__PURE__*/\nrequire(\"./descend\");\nmodule.exports.difference =\n/*#__PURE__*/\nrequire(\"./difference\");\nmodule.exports.differenceWith =\n/*#__PURE__*/\nrequire(\"./differenceWith\");\nmodule.exports.dissoc =\n/*#__PURE__*/\nrequire(\"./dissoc\");\nmodule.exports.dissocPath =\n/*#__PURE__*/\nrequire(\"./dissocPath\");\nmodule.exports.divide =\n/*#__PURE__*/\nrequire(\"./divide\");\nmodule.exports.drop =\n/*#__PURE__*/\nrequire(\"./drop\");\nmodule.exports.dropLast =\n/*#__PURE__*/\nrequire(\"./dropLast\");\nmodule.exports.dropLastWhile =\n/*#__PURE__*/\nrequire(\"./dropLastWhile\");\nmodule.exports.dropRepeats =\n/*#__PURE__*/\nrequire(\"./dropRepeats\");\nmodule.exports.dropRepeatsWith =\n/*#__PURE__*/\nrequire(\"./dropRepeatsWith\");\nmodule.exports.dropWhile =\n/*#__PURE__*/\nrequire(\"./dropWhile\");\nmodule.exports.either =\n/*#__PURE__*/\nrequire(\"./either\");\nmodule.exports.empty =\n/*#__PURE__*/\nrequire(\"./empty\");\nmodule.exports.endsWith =\n/*#__PURE__*/\nrequire(\"./endsWith\");\nmodule.exports.eqBy =\n/*#__PURE__*/\nrequire(\"./eqBy\");\nmodule.exports.eqProps =\n/*#__PURE__*/\nrequire(\"./eqProps\");\nmodule.exports.equals =\n/*#__PURE__*/\nrequire(\"./equals\");\nmodule.exports.evolve =\n/*#__PURE__*/\nrequire(\"./evolve\");\nmodule.exports.filter =\n/*#__PURE__*/\nrequire(\"./filter\");\nmodule.exports.find =\n/*#__PURE__*/\nrequire(\"./find\");\nmodule.exports.findIndex =\n/*#__PURE__*/\nrequire(\"./findIndex\");\nmodule.exports.findLast =\n/*#__PURE__*/\nrequire(\"./findLast\");\nmodule.exports.findLastIndex =\n/*#__PURE__*/\nrequire(\"./findLastIndex\");\nmodule.exports.flatten =\n/*#__PURE__*/\nrequire(\"./flatten\");\nmodule.exports.flip =\n/*#__PURE__*/\nrequire(\"./flip\");\nmodule.exports.forEach =\n/*#__PURE__*/\nrequire(\"./forEach\");\nmodule.exports.forEachObjIndexed =\n/*#__PURE__*/\nrequire(\"./forEachObjIndexed\");\nmodule.exports.fromPairs =\n/*#__PURE__*/\nrequire(\"./fromPairs\");\nmodule.exports.groupBy =\n/*#__PURE__*/\nrequire(\"./groupBy\");\nmodule.exports.groupWith =\n/*#__PURE__*/\nrequire(\"./groupWith\");\nmodule.exports.gt =\n/*#__PURE__*/\nrequire(\"./gt\");\nmodule.exports.gte =\n/*#__PURE__*/\nrequire(\"./gte\");\nmodule.exports.has =\n/*#__PURE__*/\nrequire(\"./has\");\nmodule.exports.hasIn =\n/*#__PURE__*/\nrequire(\"./hasIn\");\nmodule.exports.hasPath =\n/*#__PURE__*/\nrequire(\"./hasPath\");\nmodule.exports.head =\n/*#__PURE__*/\nrequire(\"./head\");\nmodule.exports.identical =\n/*#__PURE__*/\nrequire(\"./identical\");\nmodule.exports.identity =\n/*#__PURE__*/\nrequire(\"./identity\");\nmodule.exports.ifElse =\n/*#__PURE__*/\nrequire(\"./ifElse\");\nmodule.exports.inc =\n/*#__PURE__*/\nrequire(\"./inc\");\nmodule.exports.includes =\n/*#__PURE__*/\nrequire(\"./includes\");\nmodule.exports.indexBy =\n/*#__PURE__*/\nrequire(\"./indexBy\");\nmodule.exports.indexOf =\n/*#__PURE__*/\nrequire(\"./indexOf\");\nmodule.exports.init =\n/*#__PURE__*/\nrequire(\"./init\");\nmodule.exports.innerJoin =\n/*#__PURE__*/\nrequire(\"./innerJoin\");\nmodule.exports.insert =\n/*#__PURE__*/\nrequire(\"./insert\");\nmodule.exports.insertAll =\n/*#__PURE__*/\nrequire(\"./insertAll\");\nmodule.exports.intersection =\n/*#__PURE__*/\nrequire(\"./intersection\");\nmodule.exports.intersperse =\n/*#__PURE__*/\nrequire(\"./intersperse\");\nmodule.exports.into =\n/*#__PURE__*/\nrequire(\"./into\");\nmodule.exports.invert =\n/*#__PURE__*/\nrequire(\"./invert\");\nmodule.exports.invertObj =\n/*#__PURE__*/\nrequire(\"./invertObj\");\nmodule.exports.invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\nmodule.exports.is =\n/*#__PURE__*/\nrequire(\"./is\");\nmodule.exports.isEmpty =\n/*#__PURE__*/\nrequire(\"./isEmpty\");\nmodule.exports.isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\nmodule.exports.join =\n/*#__PURE__*/\nrequire(\"./join\");\nmodule.exports.juxt =\n/*#__PURE__*/\nrequire(\"./juxt\");\nmodule.exports.keys =\n/*#__PURE__*/\nrequire(\"./keys\");\nmodule.exports.keysIn =\n/*#__PURE__*/\nrequire(\"./keysIn\");\nmodule.exports.last =\n/*#__PURE__*/\nrequire(\"./last\");\nmodule.exports.lastIndexOf =\n/*#__PURE__*/\nrequire(\"./lastIndexOf\");\nmodule.exports.length =\n/*#__PURE__*/\nrequire(\"./length\");\nmodule.exports.lens =\n/*#__PURE__*/\nrequire(\"./lens\");\nmodule.exports.lensIndex =\n/*#__PURE__*/\nrequire(\"./lensIndex\");\nmodule.exports.lensPath =\n/*#__PURE__*/\nrequire(\"./lensPath\");\nmodule.exports.lensProp =\n/*#__PURE__*/\nrequire(\"./lensProp\");\nmodule.exports.lift =\n/*#__PURE__*/\nrequire(\"./lift\");\nmodule.exports.liftN =\n/*#__PURE__*/\nrequire(\"./liftN\");\nmodule.exports.lt =\n/*#__PURE__*/\nrequire(\"./lt\");\nmodule.exports.lte =\n/*#__PURE__*/\nrequire(\"./lte\");\nmodule.exports.map =\n/*#__PURE__*/\nrequire(\"./map\");\nmodule.exports.mapAccum =\n/*#__PURE__*/\nrequire(\"./mapAccum\");\nmodule.exports.mapAccumRight =\n/*#__PURE__*/\nrequire(\"./mapAccumRight\");\nmodule.exports.mapObjIndexed =\n/*#__PURE__*/\nrequire(\"./mapObjIndexed\");\nmodule.exports.match =\n/*#__PURE__*/\nrequire(\"./match\");\nmodule.exports.mathMod =\n/*#__PURE__*/\nrequire(\"./mathMod\");\nmodule.exports.max =\n/*#__PURE__*/\nrequire(\"./max\");\nmodule.exports.maxBy =\n/*#__PURE__*/\nrequire(\"./maxBy\");\nmodule.exports.mean =\n/*#__PURE__*/\nrequire(\"./mean\");\nmodule.exports.median =\n/*#__PURE__*/\nrequire(\"./median\");\nmodule.exports.memoizeWith =\n/*#__PURE__*/\nrequire(\"./memoizeWith\");\nmodule.exports.merge =\n/*#__PURE__*/\nrequire(\"./merge\");\nmodule.exports.mergeAll =\n/*#__PURE__*/\nrequire(\"./mergeAll\");\nmodule.exports.mergeDeepLeft =\n/*#__PURE__*/\nrequire(\"./mergeDeepLeft\");\nmodule.exports.mergeDeepRight =\n/*#__PURE__*/\nrequire(\"./mergeDeepRight\");\nmodule.exports.mergeDeepWith =\n/*#__PURE__*/\nrequire(\"./mergeDeepWith\");\nmodule.exports.mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\nmodule.exports.mergeLeft =\n/*#__PURE__*/\nrequire(\"./mergeLeft\");\nmodule.exports.mergeRight =\n/*#__PURE__*/\nrequire(\"./mergeRight\");\nmodule.exports.mergeWith =\n/*#__PURE__*/\nrequire(\"./mergeWith\");\nmodule.exports.mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\nmodule.exports.min =\n/*#__PURE__*/\nrequire(\"./min\");\nmodule.exports.minBy =\n/*#__PURE__*/\nrequire(\"./minBy\");\nmodule.exports.modulo =\n/*#__PURE__*/\nrequire(\"./modulo\");\nmodule.exports.move =\n/*#__PURE__*/\nrequire(\"./move\");\nmodule.exports.multiply =\n/*#__PURE__*/\nrequire(\"./multiply\");\nmodule.exports.nAry =\n/*#__PURE__*/\nrequire(\"./nAry\");\nmodule.exports.negate =\n/*#__PURE__*/\nrequire(\"./negate\");\nmodule.exports.none =\n/*#__PURE__*/\nrequire(\"./none\");\nmodule.exports.not =\n/*#__PURE__*/\nrequire(\"./not\");\nmodule.exports.nth =\n/*#__PURE__*/\nrequire(\"./nth\");\nmodule.exports.nthArg =\n/*#__PURE__*/\nrequire(\"./nthArg\");\nmodule.exports.o =\n/*#__PURE__*/\nrequire(\"./o\");\nmodule.exports.objOf =\n/*#__PURE__*/\nrequire(\"./objOf\");\nmodule.exports.of =\n/*#__PURE__*/\nrequire(\"./of\");\nmodule.exports.omit =\n/*#__PURE__*/\nrequire(\"./omit\");\nmodule.exports.once =\n/*#__PURE__*/\nrequire(\"./once\");\nmodule.exports.or =\n/*#__PURE__*/\nrequire(\"./or\");\nmodule.exports.otherwise =\n/*#__PURE__*/\nrequire(\"./otherwise\");\nmodule.exports.over =\n/*#__PURE__*/\nrequire(\"./over\");\nmodule.exports.pair =\n/*#__PURE__*/\nrequire(\"./pair\");\nmodule.exports.partial =\n/*#__PURE__*/\nrequire(\"./partial\");\nmodule.exports.partialRight =\n/*#__PURE__*/\nrequire(\"./partialRight\");\nmodule.exports.partition =\n/*#__PURE__*/\nrequire(\"./partition\");\nmodule.exports.path =\n/*#__PURE__*/\nrequire(\"./path\");\nmodule.exports.paths =\n/*#__PURE__*/\nrequire(\"./paths\");\nmodule.exports.pathEq =\n/*#__PURE__*/\nrequire(\"./pathEq\");\nmodule.exports.pathOr =\n/*#__PURE__*/\nrequire(\"./pathOr\");\nmodule.exports.pathSatisfies =\n/*#__PURE__*/\nrequire(\"./pathSatisfies\");\nmodule.exports.pick =\n/*#__PURE__*/\nrequire(\"./pick\");\nmodule.exports.pickAll =\n/*#__PURE__*/\nrequire(\"./pickAll\");\nmodule.exports.pickBy =\n/*#__PURE__*/\nrequire(\"./pickBy\");\nmodule.exports.pipe =\n/*#__PURE__*/\nrequire(\"./pipe\");\nmodule.exports.pipeK =\n/*#__PURE__*/\nrequire(\"./pipeK\");\nmodule.exports.pipeP =\n/*#__PURE__*/\nrequire(\"./pipeP\");\nmodule.exports.pipeWith =\n/*#__PURE__*/\nrequire(\"./pipeWith\");\nmodule.exports.pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\nmodule.exports.prepend =\n/*#__PURE__*/\nrequire(\"./prepend\");\nmodule.exports.product =\n/*#__PURE__*/\nrequire(\"./product\");\nmodule.exports.project =\n/*#__PURE__*/\nrequire(\"./project\");\nmodule.exports.prop =\n/*#__PURE__*/\nrequire(\"./prop\");\nmodule.exports.propEq =\n/*#__PURE__*/\nrequire(\"./propEq\");\nmodule.exports.propIs =\n/*#__PURE__*/\nrequire(\"./propIs\");\nmodule.exports.propOr =\n/*#__PURE__*/\nrequire(\"./propOr\");\nmodule.exports.propSatisfies =\n/*#__PURE__*/\nrequire(\"./propSatisfies\");\nmodule.exports.props =\n/*#__PURE__*/\nrequire(\"./props\");\nmodule.exports.range =\n/*#__PURE__*/\nrequire(\"./range\");\nmodule.exports.reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\nmodule.exports.reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\nmodule.exports.reduceRight =\n/*#__PURE__*/\nrequire(\"./reduceRight\");\nmodule.exports.reduceWhile =\n/*#__PURE__*/\nrequire(\"./reduceWhile\");\nmodule.exports.reduced =\n/*#__PURE__*/\nrequire(\"./reduced\");\nmodule.exports.reject =\n/*#__PURE__*/\nrequire(\"./reject\");\nmodule.exports.remove =\n/*#__PURE__*/\nrequire(\"./remove\");\nmodule.exports.repeat =\n/*#__PURE__*/\nrequire(\"./repeat\");\nmodule.exports.replace =\n/*#__PURE__*/\nrequire(\"./replace\");\nmodule.exports.reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\nmodule.exports.scan =\n/*#__PURE__*/\nrequire(\"./scan\");\nmodule.exports.sequence =\n/*#__PURE__*/\nrequire(\"./sequence\");\nmodule.exports.set =\n/*#__PURE__*/\nrequire(\"./set\");\nmodule.exports.slice =\n/*#__PURE__*/\nrequire(\"./slice\");\nmodule.exports.sort =\n/*#__PURE__*/\nrequire(\"./sort\");\nmodule.exports.sortBy =\n/*#__PURE__*/\nrequire(\"./sortBy\");\nmodule.exports.sortWith =\n/*#__PURE__*/\nrequire(\"./sortWith\");\nmodule.exports.split =\n/*#__PURE__*/\nrequire(\"./split\");\nmodule.exports.splitAt =\n/*#__PURE__*/\nrequire(\"./splitAt\");\nmodule.exports.splitEvery =\n/*#__PURE__*/\nrequire(\"./splitEvery\");\nmodule.exports.splitWhen =\n/*#__PURE__*/\nrequire(\"./splitWhen\");\nmodule.exports.startsWith =\n/*#__PURE__*/\nrequire(\"./startsWith\");\nmodule.exports.subtract =\n/*#__PURE__*/\nrequire(\"./subtract\");\nmodule.exports.sum =\n/*#__PURE__*/\nrequire(\"./sum\");\nmodule.exports.symmetricDifference =\n/*#__PURE__*/\nrequire(\"./symmetricDifference\");\nmodule.exports.symmetricDifferenceWith =\n/*#__PURE__*/\nrequire(\"./symmetricDifferenceWith\");\nmodule.exports.tail =\n/*#__PURE__*/\nrequire(\"./tail\");\nmodule.exports.take =\n/*#__PURE__*/\nrequire(\"./take\");\nmodule.exports.takeLast =\n/*#__PURE__*/\nrequire(\"./takeLast\");\nmodule.exports.takeLastWhile =\n/*#__PURE__*/\nrequire(\"./takeLastWhile\");\nmodule.exports.takeWhile =\n/*#__PURE__*/\nrequire(\"./takeWhile\");\nmodule.exports.tap =\n/*#__PURE__*/\nrequire(\"./tap\");\nmodule.exports.test =\n/*#__PURE__*/\nrequire(\"./test\");\nmodule.exports.andThen =\n/*#__PURE__*/\nrequire(\"./andThen\");\nmodule.exports.times =\n/*#__PURE__*/\nrequire(\"./times\");\nmodule.exports.toLower =\n/*#__PURE__*/\nrequire(\"./toLower\");\nmodule.exports.toPairs =\n/*#__PURE__*/\nrequire(\"./toPairs\");\nmodule.exports.toPairsIn =\n/*#__PURE__*/\nrequire(\"./toPairsIn\");\nmodule.exports.toString =\n/*#__PURE__*/\nrequire(\"./toString\");\nmodule.exports.toUpper =\n/*#__PURE__*/\nrequire(\"./toUpper\");\nmodule.exports.transduce =\n/*#__PURE__*/\nrequire(\"./transduce\");\nmodule.exports.transpose =\n/*#__PURE__*/\nrequire(\"./transpose\");\nmodule.exports.traverse =\n/*#__PURE__*/\nrequire(\"./traverse\");\nmodule.exports.trim =\n/*#__PURE__*/\nrequire(\"./trim\");\nmodule.exports.tryCatch =\n/*#__PURE__*/\nrequire(\"./tryCatch\");\nmodule.exports.type =\n/*#__PURE__*/\nrequire(\"./type\");\nmodule.exports.unapply =\n/*#__PURE__*/\nrequire(\"./unapply\");\nmodule.exports.unary =\n/*#__PURE__*/\nrequire(\"./unary\");\nmodule.exports.uncurryN =\n/*#__PURE__*/\nrequire(\"./uncurryN\");\nmodule.exports.unfold =\n/*#__PURE__*/\nrequire(\"./unfold\");\nmodule.exports.union =\n/*#__PURE__*/\nrequire(\"./union\");\nmodule.exports.unionWith =\n/*#__PURE__*/\nrequire(\"./unionWith\");\nmodule.exports.uniq =\n/*#__PURE__*/\nrequire(\"./uniq\");\nmodule.exports.uniqBy =\n/*#__PURE__*/\nrequire(\"./uniqBy\");\nmodule.exports.uniqWith =\n/*#__PURE__*/\nrequire(\"./uniqWith\");\nmodule.exports.unless =\n/*#__PURE__*/\nrequire(\"./unless\");\nmodule.exports.unnest =\n/*#__PURE__*/\nrequire(\"./unnest\");\nmodule.exports.until =\n/*#__PURE__*/\nrequire(\"./until\");\nmodule.exports.update =\n/*#__PURE__*/\nrequire(\"./update\");\nmodule.exports.useWith =\n/*#__PURE__*/\nrequire(\"./useWith\");\nmodule.exports.values =\n/*#__PURE__*/\nrequire(\"./values\");\nmodule.exports.valuesIn =\n/*#__PURE__*/\nrequire(\"./valuesIn\");\nmodule.exports.view =\n/*#__PURE__*/\nrequire(\"./view\");\nmodule.exports.when =\n/*#__PURE__*/\nrequire(\"./when\");\nmodule.exports.where =\n/*#__PURE__*/\nrequire(\"./where\");\nmodule.exports.whereEq =\n/*#__PURE__*/\nrequire(\"./whereEq\");\nmodule.exports.without =\n/*#__PURE__*/\nrequire(\"./without\");\nmodule.exports.xor =\n/*#__PURE__*/\nrequire(\"./xor\");\nmodule.exports.xprod =\n/*#__PURE__*/\nrequire(\"./xprod\");\nmodule.exports.zip =\n/*#__PURE__*/\nrequire(\"./zip\");\nmodule.exports.zipObj =\n/*#__PURE__*/\nrequire(\"./zipObj\");\nmodule.exports.zipWith =\n/*#__PURE__*/\nrequire(\"./zipWith\");\nmodule.exports.thunkify =\n/*#__PURE__*/\nrequire(\"./thunkify\");", null, "import { Handler } from '@netlify/functions'\nimport { getAllVaccinationCities } from '@abdulhannanali/vaccination-centres-parser'\nimport pagination from './lib/pagination'\n\n\ninterface FilterCriteria {\n    district?: string;\n    province?: string;\n    tehsil?: string;\n    page?: string\n}\n\nexport const handler: Handler = async function (event, context) {\n    return {\n        body: JSON.stringify(getAllVaccinationCities()),\n        headers: {\n            'Access-Control-Allow-Origin': '*'\n        },\n        statusCode: 200\n    }\n}\n\nfunction getFilteredVaccinationCities (filterCriteria: FilterCriteria) {\n    const filteredCities = (\n        getAllVaccinationCities()\n            .filter(vaccinationCity => {\n                return (\n                    (!filterCriteria.district || vaccinationCity.district.match(new RegExp(filterCriteria.district, 'i'))) &&\n                    (!filterCriteria.province || vaccinationCity.province.match(new RegExp(filterCriteria.province, 'i'))) &&\n                    (!filterCriteria.tehsil || vaccinationCity.tehsil.match(new RegExp(filterCriteria.tehsil, 'i')))\n                )    \n            })           \n    )\n\n\n    return filteredCities\n}"],
  "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",
  "names": []
}
